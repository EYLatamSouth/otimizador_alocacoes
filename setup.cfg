
[options]
zip_safe = False
include_package_data = True
package_dir=
    =src
packages=find:
install_requires =
    nox
    importlib; python_version >= "3.7"


[options.packages.find]
where=src


[options.package_data]
* = *.txt, *.rst, *.csv


[tox:tox]
isolated_build = true
envlist = py38, py39, py310, py311, py312, format, lint, build


[flake8]
max-line-length = 100
ignore = E122,E123,E126,E127,E128,E731,E722
exclude = build,allocpro/_version.py,tests,conda.recipe,.git,versioneer.py,benchmarks,.asv


[tool:pytest]
norecursedirs =
    .git
    .tox
    .env
    dist
    build
    migrations
python_files =
    test_*.py
    *_test.py
    tests.py
addopts =
    -ra
    --strict-markers
    --ignore=docs/conf.py
    --ignore=setup.py
    --ignore=ci
    --ignore=.eggs
    --doctest-modules
    --doctest-glob=\*.rst
    --tb=short
    --pyargs

# The order of these options matters. testpaths comes after addopts so that
# allocpro in testpaths is interpreted as
# --pyargs allocpro.
# Any tests in the src/ directory (that is, tests installed with the package)
# can be run by any user with pytest --pyargs allocpro.
# Packages that are sensitive to the host machine, most famously NumPy,
# include tests with the installed package so that any user can check
# at any time that everything is working properly.
# If you do choose to make installable tests, this will run the installed
# tests as they are actually installed (same principle as when we ensure that
# we always test the installed version of the package).
# If you have no need for this (and your src/ directory is very large),
# you can save a few milliseconds on testing by telling pytest not to search
# the src/ directory by removing
# --pyargs and allocpro from the options here.
testpaths =
    allocpro
    tests/
markers =
    serial: execute test serially (to avoid race conditions)


[bdist_wheel]
universal=1
